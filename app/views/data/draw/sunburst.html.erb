<style>

#main {
  width: 100%;
  text-align: center;
}

path {
  stroke: #fff;
  fill-rule: evenodd;
}

#sequence {
  width: 600px;
  height: 70px;
}

#chart {
  position: relative;
}

#chart path {
  stroke: #fff;
}

#explanation {
  position: absolute;
  top: 260px;
  left: 305px;
  width: 140px;
  text-align: center;
  color: #666;
  z-index: -1;
}

#percentage {
  font-size: 2.5em;
}

</style>

<h1>Draw#sunburst</h1>

<div class="row">
  <div class="col-sm-9">
    <div class="form-group">
      <label for="select-main">Compare</label>
      <select id="select-main" class="form-control">
        <option disabled selected> loading... </option>
      </select>
    </div>
  </div>
  <div class="col-sm-3">
    <div class="form-group">
      <label for="select-size">Based on</label>
      <select id="select-size" class="form-control">
        <option disabled selected> loading... </option>
      </select>
    </div>
  </div>
</div>

<button id="saveButton" onclick="save()" class="btn btn-primary" style="display: none">Save</button>

<div id="sequence"></div>
<div class="visualization-container">
  <div id="chart"></div>
</div>

<%= javascript_include_tag 'draw/'+action_name.dasherize %>
<script>
  var data, levels, measure = 'count';

  // drawStackedBars(data);
  var req = $.get("<%= datum_path(@datum, format: :json) %>");

  $.when(req).done(function(res) {
    data = res;
    updateMainSelect(data["headers"]);
    updateValuesSelect(data["headers"]);
  });

  var updateMainSelect = function(keys) {
    $.each(keys, function(i, key) {
      if (data["numbers"].indexOf(key) != -1) return true;
      $("#select-main")
        .append($("<option></option>")
        .attr("value",key)
        .text(key)); 
    })
    $("#select-main").selectize({ maxItems: 10 });
    $("#select-main").on("change" ,function() {
      levels = $(this).val();
      draw();
    })
  }

  var updateValuesSelect = function(keys) {
    $.each(keys, function(i, key) {
      if (data["numbers"].indexOf(key) == -1) return true;
      $("#select-size")
        .append($("<option></option>")
        .attr("value",key)
        .text(key)); 
    })
    $("#select-size")
      .append($("<option selected></option>")
      .attr("value","count")
      .text("Count records")); 
    $("#select-size").selectize();
    $("#select-size").on("change" ,function() {
      measure = $(this).val();
      draw();
    })
  }

  var draw = function() {
    reset()
    var valid = levels;

    if (valid){
      $("#saveButton").show();
      processData(levels, measure, function(processedData){
        drawZoomable(processedData);
      });
    }
  }

  var save = function() {
    var valid = levels;

    if (valid) {
      var type = "sunburst",
        selections = {},
        datum_id = <%= @datum.id %>;

      selections.data = levels;
      selections.measure = measure;
      var jqxhr = $.post("<%= visualizations_path %>", { visualization: { type: type, selections: JSON.stringify(selections), datum_id: datum_id }})
        .done(function(data) {
          $.globalEval(data);
        })
        .fail(function() {
          alert( "Error! Please try again later." );
        });
    }
  }

  var reset = function() {
    $("#saveButton").hide();
    $("#chart").html("")
    $("#sequence").html("")
  }

</script>

