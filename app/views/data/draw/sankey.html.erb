<%= stylesheet_link_tag    'bootstrap-select/bootstrap-select', media: 'all', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'bootstrap-select/bootstrap-select', 'data-turbolinks-track' => true %>
<style>

  .node rect {
    cursor: move;
    fill-opacity: .9;
    shape-rendering: crispEdges;
  }

  .node text {
    pointer-events: none;
    text-shadow: 0 1px 0 #fff;
  }

  .link {
    fill: none;
    stroke: #000;
    stroke-opacity: .2;
  }

  .link:hover {
    stroke-opacity: .5;
  }

  .list-group {
    min-height: 25px;
  }

  .panels > .form-group {
    margin-top: 0;
  }

</style>

<div class="bs-docs-section">
  <div class="row">
    <div class="col-md-12">
      <div class="page-header">
        <h1>Draw#sankey</h1>
      </div>
    </div>
    <div class="col-sm-12">
  
      <div class="row">
        <div class="col-sm-9">
          <div class="form-group">
            <label for="select-main">Select variables you want to see the relationships between them</label>
            <select id="select-main" class="form-control" placeholder="Select here">
              <option disabled selected> loading... </option>
            </select>
          </div>
        </div>
        <div class="col-sm-3">
          <div class="form-group">
            <label for="select-measure">Relate based on</label>
            <select id="select-measure" class="form-control">
              <option disabled selected> loading... </option>
            </select>
          </div>
        </div>
      </div>

      <a class="btn btn-primary" onclick="draw()">Draw</a>
      <a id="saveButton" onclick="save()" class="btn btn-primary" style="display: none">Save</a>

    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <p>You can select which element of a variable to be shown in the sankey.</p>
      <div class="row">
        <div id="selectedItems"></div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-sm-12">
      <div class="draw-container">
        <div class="visualization-container">
          <div id="chart"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<%= javascript_include_tag 'draw/'+action_name.dasherize %>
<script>
  var data,
    graph,
    graphCopy,
    selectorCount = 0,
    maxPanel = 4,
    selectize = null,
    measure = 'count';
  graph = {"nodes":[], "links":[]};
  var req = $.get("<%= datum_path(@datum, format: :json) %>");

  $.when(req).done(function(res) {
    data = res;
    updateMainSelect(Object.keys(data.header_keys));
    updateMeasureSelect(Object.keys(data.header_keys));
  });

  var updateMainSelect = function(options) {
    $.each(options, function(i, key) {
      if (data["numbers"].indexOf(key) != -1) return true;

      var tempKey = key;
      if (data["values"][getDataHeaderKey(data, key)].length > 9)
        tempKey += " - NOT RECOMMENDED";

      $("#select-main")
        .append($("<option></option>")
        .attr("value",key)
        .text(tempKey)); 
    })
    selectize = $("#select-main").selectize({
      maxItems: 4,
      onItemAdd: function(value, $item) {addPanel(value)},
      onItemRemove: function(value) {removePanel(value)}
    })[0].selectize;
  }

  var updateMeasureSelect = function(options) {
    $.each(options, function(i, key) {
      if (data["numbers"].indexOf(key) == -1) return true;
      $("#select-measure")
        .append($("<option></option>")
        .attr("value",key)
        .text(key)); 
    })
    $("#select-measure")
      .append($("<option selected></option>")
      .attr("value", 'count')
      .text("Count records"));
    $("#select-measure").selectize()[0]
      .selectize.on('change', function() {
        measure = this.getValue();
      });
  }

  var addPanel = function(header) {
    if (selectorCount < maxPanel) {
      $('.panels').removeClass("col-sm-"+(12/selectorCount++))
      $('.panels').addClass("col-sm-"+(12/selectorCount))
      $("#selectedItems").append(createSelector(header));
      $("#select-"+removePunct(header)).selectpicker('selectAll');
    }
  }

  var removePanel = function(header) {
    if (selectorCount > 0) {
      $('.panels').removeClass("col-sm-"+(12/selectorCount--))
      $('.panels').addClass("col-sm-"+(12/selectorCount))
      $("#selector-"+removePunct(header)).remove();
      $("#selector-body-"+removePunct(header)).show();
    }
  }

  var removePunct = function(str) {
    return str.replace(/[.,\/?#!$%\^&\*;:{}=\-_`~()]/g,"").replace(/\s+/g, '');
  }

  var createSelector = function(header) {

    var populateOptions = function(header) {
      var r = "";

      for (var i = 0; i < data["values"][getDataHeaderKey(data, header)].length; i++) {
        r += '<option value="'+data["values"][getDataHeaderKey(data, header)][i]+'">'+data["values"][getDataHeaderKey(data, header)][i]+'</option>';
      }

      return r;
    }

    return  '<div class="panels col-sm-'+(12/selectorCount)+'" id="selector-'+removePunct(header)+'">' +
            '  <div class="form-group">'+
            '    <label for="select-'+removePunct(header)+'">'+header+'</label>'+
            '    <select id="select-'+removePunct(header)+'" class="form-control selector"'+
            '      multiple data-actions-box="true" data-selected-text-format="count > 3"'+
            '      data-live-search="true">'+populateOptions(header)+'</select>'+
            '  </div>'+
            '</div>'
  }

  var reset = function() {
    $(".draw-container").height("700px");
    $("#saveButton").hide();
    graph = {"nodes":[], "links":[]};
    $("#chart").html("")
  }

  var draw = function() {
    reset();

    var nodes = {};

    $.each(selectize.getValue(), function(i, h){
      var values = $("#select-"+removePunct(h)).val();
      if(values == null) return;
      nodes[h] = values;
    })
    addNodesToGraph(nodes);

    linkNodes(graph, data, measure);
    graphCopy = jQuery.extend(true, {}, graph)
    $("#saveButton").show();
    drawSankey(graph);
    return false;
  }

  var addNodesToGraph = function(nodes) {
    $.each(nodes, function(h, n) {
      for (var i = n.length - 1; i >= 0; i--) {
        var node = {"node":graph.nodes.length,"name":n[i], "header": h};
        graph.nodes.push(node);
      }
    })
  }

  var save = function() {
    var type = "sankey",
      selections = JSON.stringify(graphCopy),
      datum_id = <%= @datum.id %>;

    var jqxhr = $.post("<%= visualizations_path %>", { visualization: { type: type, selections: selections, datum_id: datum_id }})
      .done(function(data) {
        $.globalEval(data);
      })
      .fail(function() {
        alert( "Error! Please try again later." );
      });
  }

</script>